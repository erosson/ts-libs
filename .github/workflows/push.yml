name: Push

on:
  push:
    branches: [main]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, don't cancel in-progress runs as we don't want half-finished deployments.
#concurrency:
#  group: "pages"
#  cancel-in-progress: false

jobs:
  # https://github.com/marketplace/actions/paths-changes-filter#examples
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: ./.github/paths-changes-filter.yml

  docker-build:
    # https://github.com/devcontainers/ci/blob/main/docs/github-action.md
    # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}
          cacheFrom: ghcr.io/${{ github.repository }}
          push: always

  test:
    runs-on: ubuntu-latest
    needs: [docker-build, changes]
    strategy:
      matrix:
        package-path: ${{ fromJSON(needs.changes.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}
          push: never
          runCmd: yarn --cwd ${{ matrix.package-path }} test

  docs-build:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: actions/configure-pages@v4
      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}
          push: never
          runCmd: yarn release-docs
      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist/docs

  docs-deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    runs-on: ubuntu-latest
    needs: [test, changes]
    strategy:
      matrix:
        package-path: ${{ fromJSON(needs.changes.outputs.packages) }}
    # permissions:
      # contents: write # to be able to publish a GitHub release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      ## normally the setup-node action configures auth, but it doesn't work well with the devcontainer step
      ## https://github.com/npm/cli/issues/6184
      #- uses: actions/setup-node@v3
      #  with:
      #    node-version: "lts/*"
      #    registry-url: "https://registry.yarnpkg.com"
      #    always-auth: true
      - run: echo '//registry.yarnpkg.com/:_authToken=${NPM_TOKEN}' > .npmrc

      - uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/${{ github.repository }}
          push: never
          runCmd: yarn --cwd ${{ matrix.package-path }} release --execute
        env:
          CI: ${{ env.CI }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}